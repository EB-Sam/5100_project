---
title: "Child Health"
format: 
  html:
    embed-resources: true
    code-fold: true
editor: visual
---

## Infant Mortality by Abortion Policy

```{r, warning=FALSE, message=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("tidyverse")
library(tidyverse)
df <- read_csv("../data/clean_data/merged_data.csv", show_col_types = FALSE)
df <- df[!is.na(df$abortion_policies), ]
df_test <- df[df$State != "US", ]
df$abortion_policies <- factor(df$abortion_policies, 
                              levels = c("most protective", "very protective", 
                                         "protective", "some restrictions/protections", 
                                         "restrictive", "very restrictive", "most restrictive"))
```

Null hypothesis: the mean infant mortality rate is the same across all abortion policy levels

Alternative hypothesis: the mean infant mortality rate is different in at least one of the abortion policy levels

```{r}
df$infant_mortality_2021
```

```{r}
# Kruskal-Wallis test
kruskal.test(infant_mortality_2021 ~ abortion_policies, data = df)

# If Kruskal-Wallis is significant, run pairwise Wilcoxon tests
pairwise.wilcox.test(df$infant_mortality_2021, 
                     df$abortion_policies,
                     p.adjust.method = "bonferroni")

# accompanying boxplot visualization
# accompanying boxplot visualization
ggplot(df, aes(x = abortion_policies, y = infant_mortality_2021, fill=abortion_policies)) +
  geom_boxplot() +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
        axis.title.y = element_text(size = 10)) + 
  scale_fill_manual(values = c("#1c7416", "#68bb59", "#acdf87", "#fab733", "#ff6242", "#ff0000", "#c61a09")) +
  labs(x = "Abortion Policies", 
       y = "Infant Morality rate per 1,000",
       title = "Infant Mortality Rate by Abortion Policy") +
  theme(plot.title = element_text(size = 20, hjust = 0.5))
```

The Kruskal-Wallis test yields a statistically significant p-value of 0.009246, which provides strong evidence to suggest that we can reject the null hypothesis in favor of the alternative and speculate that the true mean infant mortality rate is different in at least one of the policy groups--- in other words, we have evidence to suggest that there is a relationship between abortion policy and infant mortality in U.S. states.

```{r}

options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("clinfun")
library(clinfun)

jt_test <- jonckheere.test(df$infant_mortality_2021, 
                          as.numeric(df$abortion_policies), 
                          alternative="increasing",
                          nperm = 10000)
print(jt_test)
```

To further confirm these results, we will perform an ANOVA permutation test:

```{r}
# Permutation Test
N <- 10000 

# Observed ANOVA F-statistic
observed_anova <- aov(infant_mortality_2021 ~ abortion_policies, data = df)
observed_F <- summary(observed_anova)[[1]][["F value"]][1]

# Permutation loop
set.seed(1234) 
perm_F <- numeric(N)

for (i in 1:N) {
  # Permute the response variable
  permuted_data <- df
  permuted_data$infant_mortality_2021 <- sample(permuted_data$infant_mortality_2021)
  
  # Perform ANOVA on permuted data
  perm_anova <- aov(infant_mortality_2021 ~ abortion_policies, data = permuted_data)
  perm_F[i] <- summary(perm_anova)[[1]][["F value"]][1]
}

# Calculate p-value
p_value <- mean(perm_F >= observed_F)

cat("Observed F-statistic:", observed_F, "\n")
cat("Permutation Test p-value:", p_value, "\n")

# Plot the permutation F-statistics
hist(perm_F, 
     breaks = 30, 
     main = "Permutation Distribution of F-statistic", 
     xlab = "F-statistic", 
     col = "palegreen4",  
     border = "white")    

# F-statistic line 
abline(v = observed_F, 
       col = "red",       
       lwd = 2, 
       lty = 2)
```

The ANOVA permutation test yields a p-value of 0.0048, which further supports our rejection of the null hypothesis in favor of the alternative under the Kruskal-Wallis test. Therefore, we have additional evidence to suggest that there is a difference in infant mortality rates in states with different abortion policies.

```{r}

df_filtered <- df %>%
  filter(!is.na(`infant_mortality_2021`)) %>%
  bind_rows(tibble(
    State = "US Average",  # Removed c() since only adding one value
    `infant_mortality_2021` = 5.4,
    abortion_policies = "US Average"  # Removed "most restrictive" since only adding US Average
  ))

policy_levels <- c(
  "most protective",
  "very protective", 
  "protective",
  "some restrictions/protections",
  "restrictive",
  "very restrictive",
  "most restrictive",
  "US Average"
)

df_filtered$abortion_policies <- factor(df_filtered$abortion_policies, 
                                      levels = policy_levels)

ggplot(df_filtered, 
       aes(y = reorder(State, `infant_mortality_2021`),
           x = `infant_mortality_2021`,
           fill = abortion_policies)) +
  geom_bar(stat = "identity", width = 0.7) +
  scale_fill_manual(
    values = c(
      "most protective" = "#1c7416",
      "very protective" = "#68bb59",
      "protective" = "#acdf87",
      "some restrictions/protections" = "#fab733",
      "restrictive" = "#ff6242",
      "very restrictive" = "#ff0000",
      "most restrictive" = "#c61a09",
      "US Average" = "#006eff"
    ),
    breaks = policy_levels
  ) +
  theme_minimal() +
  labs(
    title = "Infant Mortality Rate by State (2021)",  # Made title more concise
    x = "Deaths per 1,000 Live Births",  # Corrected units
    y = "",
    fill = "Abortion Policy"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12),
    axis.title.x = element_text(size = 10),
    axis.text.y = element_text(size = 8),
    axis.text.x = element_text(size = 8),
    legend.position = "right",
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8),
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA)
  ) +
  scale_x_continuous(
    limits = c(0, 15),
    breaks = seq(0, 15, by = 5),  # Changed to increments of 5 for better readability
    expand = expansion(mult = c(0, 0.1))
  )
```