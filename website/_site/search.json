[
  {
    "objectID": "results/travel.html",
    "href": "results/travel.html",
    "title": "Travel Data EDA",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(maps)\n\nWarning: package 'maps' was built under R version 4.4.2\n\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(networkD3)\n\nWarning: package 'networkD3' was built under R version 4.4.2\n\nlibrary(ggalluvial)\n\nWarning: package 'ggalluvial' was built under R version 4.4.2\n\nlibrary(htmltools)\n\n\npolicy_travel &lt;- read.csv(\"../data/clean_data/policy_travel_jlin.csv\")\npolicy_travel$X &lt;- NULL\n\nunique(policy_travel$abortion_policies)\n\n[1] \"most restrictive\"              \"protective\"                   \n[3] \"very restrictive\"              \"very protective\"              \n[5] \"some restrictions/protections\" \"restrictive\"                  \n[7] \"most protective\"              \n\n\n\n# Create policy_distribution by grouping and counting states by abortion_policies\npolicy_distribution &lt;- policy_travel %&gt;%\n  group_by(abortion_policies) %&gt;%\n  summarise(State_Count = n()) %&gt;%\n  ungroup()\n\n# Plot the bar chart with labels next to the bars\nggplot(policy_distribution, aes(x = abortion_policies, y = State_Count, fill = abortion_policies)) +\n    geom_bar(stat = \"identity\", color = \"black\", width = 0.7) +\n    geom_text(\n        aes(label = State_Count), # Add state count as labels\n        hjust = 1.1, # Adjust placement inside or near the end of the bar\n        size = 6, # Adjust label size\n        color = \"black\" # Ensure visibility of text on colored bars\n    ) +\n    scale_fill_manual(\n        values = c(\n            \"most protective\" = \"#1c7416\",\n            \"very protective\" = \"#68bb59\",\n            \"protective\" = \"#acdf87\",\n            \"some restrictions/protections\" = \"#fab733\",\n            \"restrictive\" = \"#ff6242\",\n            \"very restrictive\" = \"#ff0000\",\n            \"most restrictive\" = \"#c61a09\"\n        )\n    ) +\n    labs(\n        title = \"Abortion Policies Across U.S. States (2023)\",\n        subtitle = \"States categorized by level of policy restrictiveness\",\n        x = NULL, # Remove x-axis label\n        y = NULL, # Remove y-axis label\n        fill = \"Policy Level\"\n    ) +\n    theme_minimal() +\n    theme(\n        plot.title = element_text(size = 20, hjust = 0.5), # Bigger and bold title\n        plot.subtitle = element_text(size = 16, hjust = 0.5), # Bigger subtitle\n        axis.title.x = element_blank(), # Remove x-axis title\n        axis.text.x = element_blank(), # Remove x-axis text\n        axis.ticks.x = element_blank(), # Remove x-axis ticks\n        axis.title.y = element_text(size = 16), # Keep y-axis title for clarity\n        axis.text.y = element_text(size = 14), # Bigger y-axis text\n        legend.title = element_text(size = 14), # Bigger legend title\n        legend.text = element_text(size = 12), # Bigger legend text\n        panel.grid.major.x = element_blank(), # Remove vertical grid lines\n        panel.grid.minor.x = element_blank() # Remove minor grid lines\n    ) +\n    coord_flip() # Flip the coordinates for better readability\n\n\n\n\n\n\n\n\n\n# Standardize the state names (convert to lowercase for matching)\npolicy_travel &lt;- policy_travel %&gt;%\n    mutate(State = tolower(State))\n\npolicy_travel &lt;- policy_travel %&gt;%\n    mutate(State = tolower(State))\n\n# Create a numerical mapping for all the policy levels\npolicy_levels &lt;- c(\n    \"most protective\",\n    \"very protective\",\n    \"protective\",\n    \"some restrictions/protections\",\n    \"restrictive\",\n    \"very restrictive\",\n    \"most restrictive\"\n)\n\n# Map policy levels to a numeric scale\npolicy_travel &lt;- policy_travel %&gt;%\n    mutate(policy_score = factor(abortion_policies, levels = policy_levels, labels = 1:length(policy_levels))) %&gt;%\n    mutate(policy_score = as.numeric(as.character(policy_score)))\n\n# Load map data for the United States\nstates_map &lt;- map_data(\"state\")\n\n# Merge the dataset with the map data\nmap_data &lt;- states_map %&gt;%\n    left_join(policy_travel, by = c(\"region\" = \"State\"))\n\nggplot(map_data, aes(long, lat, group = group, fill = policy_score)) +\n    geom_polygon(color = \"black\", size = 0.3) +\n    coord_fixed(1.3) +\n    theme_minimal() +\n    scale_fill_gradientn(\n        colors = c(\"#1c7416\", \"#68bb59\", \"#acdf87\", \"#fab733\", \"#ff6242\", \"#ff0000\", \"#c61a09\"),\n        breaks = c(1, 4, 7), # Fewer labels: First, Middle, and Last\n        labels = c(\"Most (+)\", \"Some (+/-)\", \"Most (-)\"), # Simplified labels\n        na.value = \"gray80\",\n        guide = guide_colorbar(\n            barwidth = 15,\n            barheight = 1,\n            title.position = \"top\",\n            title.hjust = 0.5 # Center the title\n        )\n    ) +\n    labs(\n        title = \"Abortion Policies by State (USA) 2023\",\n        subtitle = \"States categorized by level of restrictiveness\",\n        fill = \"Policy Restrictiveness\"\n    ) +\n    theme(\n        plot.title = element_text(size = 18, hjust = 0.5),\n        plot.subtitle = element_text(size = 12, hjust = 0.5),\n        legend.title = element_text(size = 12, hjust = 0.5),\n        legend.text = element_text(size = 10, angle = 45, vjust = 1, hjust = 1), # Rotate labels to reduce clutter\n        legend.position = \"bottom\",\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid = element_blank()\n    )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n# Standardize the state names for compatibility with map data\npolicy_travel &lt;- policy_travel %&gt;%\n    mutate(State = tolower(State))\n\n# Calculate total inbound travel for each state\npolicy_travel &lt;- policy_travel %&gt;%\n    rowwise() %&gt;%\n    mutate(total_inbound = sum(across(ends_with(\"_residence_travelled_to_for_abortion\")), na.rm = TRUE)) %&gt;%\n    ungroup()\n\n# Load U.S. states map data\nstates_map &lt;- map_data(\"state\")\n\n# Merge map data with the travel data\nmap_data &lt;- states_map %&gt;%\n    left_join(policy_travel, by = c(\"region\" = \"State\"))\n\n# Plot the choropleth map\nggplot(map_data, aes(long, lat, group = group, fill = total_inbound)) +\n    geom_polygon(color = \"black\", size = 0.2) +\n    coord_fixed(1.3) +\n    scale_fill_gradientn(\n        colors = c(\"#1c7416\", \"#68bb59\", \"#acdf87\", \"#fab733\", \"#ff6242\", \"#ff0000\", \"#c61a09\"),\n        na.value = \"gray80\",\n        name = \"Inbound Travel\"\n    ) +\n    labs(\n        title = \"Inbound Abortion Travel by State (2023)\",\n        subtitle = \"Number of individuals traveling to each state for abortion services\"\n    ) +\n    theme_minimal() +\n    theme(\n        plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5), # Smaller size and centered\n        plot.subtitle = element_text(size = 12, hjust = 0.5),\n        legend.position = \"right\",\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid = element_blank()\n    )\n\n\n\n\n\n\n\n\n\n# Step 1: Extract travel data columns\n# Select relevant columns: State and destinations for abortion travel\n# Create a lookup table for state abbreviations and full names\nstate_abbreviations &lt;- tibble(\n    abbr = c(\n        \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\",\n        \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\",\n        \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"\n    ),\n    full = c(\n        \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\",\n        \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\",\n        \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\",\n        \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\",\n        \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\",\n        \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\n    )\n)\n\n# Extract and rename travel data columns, replacing &lt;State ID&gt; with full names\ntravel_data &lt;- policy_travel %&gt;%\n    select(State, ends_with(\"_residence_travelled_to_for_abortion\")) %&gt;%\n    rename_with(\n        ~ sub(\"_residence_travelled_to_for_abortion\", \"\", .), # Remove the suffix\n        ends_with(\"_residence_travelled_to_for_abortion\")\n    ) %&gt;%\n    rename_with(\n        ~ ifelse(\n            !is.na(state_abbreviations$full[match(., state_abbreviations$abbr)]), # Check if a match is found\n            state_abbreviations$full[match(., state_abbreviations$abbr)], # Replace with full name\n            . # Otherwise, retain the original abbreviation\n        ),\n        everything()\n    )\n\n# Step 2: Reshape data for Sankey plot\n# Convert wide format to long format and flip Source and Target\nflow_data &lt;- travel_data %&gt;%\n    pivot_longer(-State, names_to = \"Source\", values_to = \"Flow\") %&gt;% # Treat \"State\" as Target initially\n    filter(Flow &gt; 0) %&gt;% # Remove zero flows\n    rename(Target = State) # Flip Source and Target\n\n# Step 3: Exclude in-state travel\n# Remove rows where the Source and Target are the same\nflow_data &lt;- flow_data %&gt;%\n    filter(Source != Target)\n\n# Step 4: Prepare nodes list\n# Ensure all unique states (sources and targets) are represented as nodes\nunique_states &lt;- unique(c(flow_data$Source, flow_data$Target))\nnodes &lt;- data.frame(name = unique_states)\n\n# Step 5: Map nodes to indices\n# Add numeric indices for Source and Target nodes\nflow_data &lt;- flow_data %&gt;%\n    mutate(\n        SourceID = match(Source, nodes$name) - 1, # Convert to zero-based index\n        TargetID = match(Target, nodes$name) - 1\n    )\n\n# Step 6: Generate the flipped Sankey plot\n# Create an interactive Sankey diagram using sankeyNetwork\nsankey_plot &lt;- sankeyNetwork(\n    Links = flow_data,\n    Nodes = nodes,\n    Source = \"SourceID\",\n    Target = \"TargetID\",\n    Value = \"Flow\",\n    NodeID = \"name\",\n    units = \"People\", # Indicate units of measure\n    fontSize = 12, # Adjust font size\n    nodeWidth = 10, # Set node width\n    nodePadding = 10, # Add padding between nodes\n    height = 1200, # Adjust plot height\n    width = 1200 # Adjust plot width\n)\n\nLinks is a tbl_df. Converting to a plain data frame.\n\n# Display the Sankey plot\n# sankey_plot\n\n# Title for the plot\ntitle &lt;- tags$h2(\"Visualization of Abortion Travel Flows Across States (2023)\",\n    style = \"text-align: center; font-family: Arial; margin-bottom: 20px; font-size:17px;\"\n)\n\nleft_header &lt;- tags$h3(\n    \"Home State\",\n    style = \"position: absolute; top: -15px; left: 50px; font-family: Arial; font-size:15px; text-align: center;\"\n)\n\nright_header &lt;- tags$h3(\n    \"Destination State\",\n    style = \"position: absolute; top: -15px; right: 50px; font-family: Arial; font-size:15px; text-align: center;\"\n)\n\n# Combine the title, headers, and Sankey plot\nhtml_output &lt;- tagList(\n    title,\n    div(style = \"position: relative;\", left_header, right_header, sankey_plot)\n)\n\n# Display the output\nhtml_output\n\nVisualization of Abortion Travel Flows Across States (2023)\n\nHome State\nDestination State"
  }
]