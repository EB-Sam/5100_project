---
title: ""
author: “Kristin Lloyd”
format: 
  html:
    embed-resources: true
    code-fold: true
---
```{python}

import pandas as pd

# Load datasets
# Add this at the start to prevent pandas from converting strings to NaN
economic_data = pd.read_excel("../data/raw_data/EconomicData.xlsx", keep_default_na=False, na_values=[])
health_data = pd.read_excel("../data/raw_data/HealthData.xlsx", keep_default_na=False, na_values=[])
policy_data = pd.read_excel("../data/raw_data/PolicyData.xlsx", keep_default_na=False, na_values=[])
education_data = pd.read_excel("../data/raw_data/EducationData.xlsx", keep_default_na=False, na_values=[])
fostercare_data = pd.read_csv("../data/raw_data/FosterCareData.csv", keep_default_na=False, na_values=[])

# Standardize 'State' names
def clean_state_name(state):
    if state.strip().lower() in ["district of columbia", "district of colombia"]:
        return "District of Columbia"
    return state.strip()

# Apply cleaning to all datasets
# Apply to all dataframes at once using a loop
dataframes = [economic_data, health_data, policy_data, education_data, fostercare_data]

for df in dataframes:
    df['State'] = df['State'].map(clean_state_name)

# Convert all rows in abortion_policies column to lowercase
if "abortion_policies" in policy_data.columns:
    policy_data["abortion_policies"] = policy_data["abortion_policies"].str.strip().str.lower()

# Merge datasets
merged_data = economic_data.merge(health_data, on="State", how="outer")\
                           .merge(policy_data, on="State", how="outer")

# Subset education and foster care data to keep only relevant columns
education_data = education_data.drop(['total_school_score', 'school_quality_rank', 'school_safety_rank'], axis=1)
fostercare_data = fostercare_data.drop(['total_children_population', 'children_in_foster_care', 'licensed_foster_homes'], axis=1)

# Merge with previously merged dataframe
merged_data = merged_data.merge(education_data, on='State', how='left')\
                        .merge(fostercare_data, on='State', how='left')
```

```{python}
# Save the cleaned and merged data
merged_data.to_csv("../data/clean_data/merged_data.csv", index=False)

print("Data merged and saved successfully!")
```
